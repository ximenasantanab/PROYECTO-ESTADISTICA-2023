D$`Restraunt Index` <- NULL
names(D)
D %>% rename( Tipo = `Room Type` , Capacidad = `Person Capacity`, Oferta = Business, Habitaciones = Bedrooms, Ind.Atraccion = `Normalised Attraction Index`, Precio = Price, Share_Room = `Shared Room`, Limpieza = `Cleanliness Rating`, Ind.Restaurantes = `Normalised Restraunt Index`, Satisfaccion = `Guest Satisfaction`, Ciudad = City, Private_Room = `Private Room`, Distance_Center = `City Center (km)`, Distance_Metro = `Metro Distance (km)`) -> D2
View(D2)
names(D2)
Total_de_NAs <- sum(is.na(D))
print(paste("El total de NAs es :", Total_de_NAs))
Observaciones_completas <- sum(complete.cases(D2))
print(paste("Observaciones completas es : ",Observaciones_completas ))
Observaciones_incompletas <- sum(!complete.cases(D2))
print(paste("Observaciones incompletas es : ", Observaciones_incompletas))
summary(D2)
par(mfrow=c(1,2))
counts <- table(D2$`Multiple Rooms`)
barplot(counts, main = "Multiple Rooms", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,35000))
counts <- table(D2$Oferta)
barplot(counts, main = "Oferta", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000), xlim = c(0,2) )
vec <- factor(D2$Oferta, labels = c('No','Sí'))
D2$Oferta <- vec
vec <- factor(D2$`Multiple Rooms`, labels = c('No','Sí'))
D2$`Multiple Rooms` <- vec
vec <- factor(D2$Share_Room, labels = c('No','Sí'))
D2$Share_Room <- vec
vec <- factor(D2$Private_Room, labels = c('No','Sí'))
D2$Private_Room <- vec
vec <- factor(D2$Superhost, labels = c('No','Sí'))
D2$Superhost <- vec
summary(D2)
par(mfrow=c(1,2))
counts <- table(D2$Capacidad)
barplot(counts, main = "Capacidad", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
filter(D2, Habitaciones==0)
D2$Habitaciones <- replace(D2$Habitaciones, D2$Habitaciones==0, NA)
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
counts <- table(D2$Limpieza)
barplot(counts, main = "Limpieza", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
table(D2$Satisfaccion)
summary(D2)
plot(D2$Precio, xlab= "Airbnb's" , ylab = "Precio")
filter(D2, Precio>10000)
plot(D2$Distance_Center, xlab= "Airbnb's" , ylab = "Distance to City Center (km)")
filter(D2, Distance_Center>15)
unique(filter(D2, Distance_Center>15)[,'Ciudad'])
plot(D2$Distance_Metro, xlab= "Airbnb's" , ylab = "Distance to Metro Station (km)")
filter(D2, Distance_Metro>8)
unique(filter(D2, Distance_Metro>8)[,'Ciudad'])
unique(D2$Ciudad)
unique(D2$Tipo)
unique(D2$Day)
counts <- table(D2$Ciudad)
barplot(counts, main = "Ciudad", ylab = "Número de Observaciones" , las=2, ylim = c(0,10000), cex.names = 0.9)
par(mfrow=c(1,2)) #QUE HACE mfrow ?
counts <- table(D2$Day)
barplot(counts, main = "Día", ylab = "Número de Observaciones", las = 2, ylim = c(0,25000), cex.axis = 0.8, cex.lab = 0.7, cex.names = 0.6)
counts <- table(D2$Tipo)
barplot(counts, main = "Tipo", ylab = "Número de Observaciones", las = 2, ylim = c(0,30000), cex.axis = 0.8, cex.names = 0.6, cex.lab = 0.7)
##
## SATISFACCIÓN
##
par(mfrow=c(1,2)) #QUE HACE mfrow ?
boxplot(D2$Satisfaccion, main = "Satisfaccion", xlab = "Puntaje de Satisfaccion", ylab = "Frecuencia")
# Add mean as a red point
points(mean(D2$Satisfaccion), col = "red", pch = 16)
# Add median as a blue point
points(median(D2$Satisfaccion), col = "blue", pch = 16)
hist(D2$Satisfaccion, main = "Satisfaccion", xlab = "Puntaje de Satisfaccion", ylab = "Frecuencia")
mean_satisfaction <- mean(D2$Satisfaccion)
median_satisfaction <- median(D2$Satisfaccion)
# Add mean as a red dashed line
abline(v = mean_satisfaction, col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median_satisfaction, col = "blue", lwd = 2)
mean_satisfaction
median_satisfaction
IQR(D2$Satisfaccion)
quantile(D2$Satisfaccion)
##
## LIMPIEZA
##
mean_limpieza <- mean(D2$Limpieza)
median_limpieza <- median(D2$Limpieza)
boxplot(D2$Limpieza, main = "Limpieza", xlab = "Puntaje de Limpieza", ylab = "Frecuencia")
# Add mean as a red point
points(mean_limpieza, col = "red", pch = 16)
# Add median as a blue point
points(median_limpieza, col = "blue", pch = 16)
mean_limpieza
median_limpieza
IQR(D2$Limpieza)
quantile(D2$Limpieza)
##
## ATRACCIÓN
##
mean_atraccion <- mean(D2$Ind.Atraccion)
median_atraccion <- median(D2$Ind.Atraccion)
par(mfrow=c(1,2)) #QUE HACE mfrow ?
boxplot(D2$Ind.Atraccion, main = "Atracción", xlab = "Índice de Atracción", ylab = "Frecuencia")
# Add mean as a red point
points(mean_atraccion, col = "red", pch = 16)
# Add median as a blue point
points(median_atraccion, col = "blue", pch = 16)
hist(D2$Ind.Atraccion, main = "Atracción", xlab = "Índice de Atracción", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean_atraccion, col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median_atraccion, col = "blue", lwd = 2)
mean_atraccion
median_atraccion
IQR(D2$Ind.Atraccion)
quantile(D2$Ind.Atraccion)
D2 %>%
group_by(Ciudad) %>%
summarise(`Precio Promedio` = mean(Precio),
`Número de Airbnb's` = n(),
`Satisfaccion Promedio` = mean(Satisfaccion),
`Superhosts %` = prop.table(table(Superhost))["Sí"],
`Puntaje de Limpieza Promedio` = mean(Limpieza),
`Índice de Atracción Promedio` = mean(Ind.Atraccion)) -> D_Ciudades
arrange(D_Ciudades)
D2 %>% filter(Ciudad =='Amsterdam') -> DAMS
D2 %>% filter(Ciudad =='Barcelona') -> DBAR
D2 %>% filter(Ciudad =='Athens') -> DATH
D2 %>% filter(Ciudad =='Berlin') -> DBER
D2 %>% filter(Ciudad =='Budapest') -> DBUD
D2 %>% filter(Ciudad =='Lisbon') -> DLIS
D2 %>% filter(Ciudad =='Paris') -> DPAR
D2 %>% filter(Ciudad =='Rome') -> DROM
D2 %>% filter(Ciudad =='Vienna') -> DVIE
par(mfrow=c(3,3))
hist(DAMS$Precio, main = "Precio en Amsterdam", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DAMS$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DAMS$Precio), col = "blue", lwd = 2)
hist(DBAR$Precio, main = "Precio en Barcelona", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DBAR$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DBAR$Precio), col = "blue", lwd = 2)
hist(DATH$Precio, main = "Precio en Atenas", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DATH$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DATH$Precio), col = "blue", lwd = 2)
hist(DBER$Precio, main = "Precio en Berlin", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DBER$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DBER$Precio), col = "blue", lwd = 2)
hist(DBUD$Precio, main = "Precio en Budapest", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DBUD$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DBUD$Precio), col = "blue", lwd = 2)
hist(DLIS$Precio, main = "Precio en Lisboa", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DLIS$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DLIS$Precio), col = "blue", lwd = 2)
hist(DPAR$Precio, main = "Precio en Paris", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DPAR$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DPAR$Precio), col = "blue", lwd = 2)
hist(DROM$Precio, main = "Precio en Roma", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DROM$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DROM$Precio), col = "blue", lwd = 2)
hist(DVIE$Precio, main = "Precio en Vienna", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DVIE$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DVIE$Precio), col = "blue", lwd = 2)
plot(x = D2$Satisfaccion, y = D2$Precio, xlab = "Satisfacción" , ylab = "Precio", ylim= c(0,2500))
cor(D2$Satisfaccion, D2$Precio)
plot(x = D2$Limpieza, y = D2$Precio, xlab = "Puntaje de Limpieza" , ylab = "Precio", ylim = c(0,5000))
cor(D2$Limpieza, D2$Precio)
plot(x = D2$Ind.Atraccion, y = D2$Precio, xlab = "Índice de Atracción" , ylab = "Precio", ylim= c(0,2500))
cor(D2$Ind.Atraccion, D2$Precio)
plot(x = D2$Limpieza, y = D2$Satisfaccion, xlab = "Satisfacción" , ylab = "Puntaje de Limpieza", ylim= c(0,100))
cor(D2$Satisfaccion, D2$Limpieza)
mosaicplot(table(D2$Ciudad, D2$Day), main = "Cuándo se reserva - Ciudad", xlab = "Ciudades", ylab = "Cuándo se Reserva", las = 0.7, )
unique(D2$Ciudad)
c <- table(D2$Ciudad)
sum(c)
barplot(c, main = "Ciudades en el Estudio", ylab = "Número de Observaciones" , las=2, ylim = c(0,10000), cex.names = 0.9, col=c("orange"))
s <-round(mean(D2$Precio),digits = 2)
mediana_precio <- median(D2$Precio)
mediana_precio
D2 %>% filter(Precio > mediana_precio) %>% arrange(desc(Precio)) -> CAROS
CAROS
nrow(CAROS) #Es el total de Airbnb con precios mayores a los 203.8193 (mediana)
c1 <- table(CAROS$Ciudad) #Del grupos de los Caros, Atenas es el que menos alojamientos tiene en el estudio (795). El de más apariciones es París (5,724)
c1
min(c1)
which.min(c1)
#Analizamos el lado de  los 100 alojamientos más caros :
CAROS[1:100, ] -> CAROS100
CAROS100
#Qué ciudad aparece más aquí en alojamientos caros :
ciudades_100 <- table(CAROS100$Ciudad)
barplot(ciudades_100)
superhost100 <- table(CAROS100$Superhost)
barplot(superhost100)
#Los valores de Limpieza y Satisfacción son muy altos
"La calificación que le asignan a este tipo de alojaminetos es 9.5 en promedio en LIMPIEZA"
mean(CAROS100$Limpieza)
"La Satisfacción del servicio es una notación alta, ya que tiene un 95.19 en promedio"
mean(CAROS100$Satisfaccion)
"Y lo mínimo en satisfacción es 60, lo que igual es alto"
min(CAROS100$Satisfaccion)
## Analizamos el tipo de cuarto y cuando lo suelen tomar por alquilado  : La mayoría es una Casa Entera
tipo_capacidad <- table(CAROS100$Tipo,CAROS100$Capacidad)
mosaicplot(tipo_capacidad)
"La cantidad promedio de habitaciones en este tipo de alojamientos es:"
roundF(mean(CAROS100$Habitaciones, na.rm = T))
day <- table(CAROS100$Day) # Y se suelen tomar los fines de semana
mosaicplot(day)
D2 %>% filter(Precio < mediana_precio) %>% arrange(Precio)-> ECO
ECO
nrow(ECO) #Es el total de Airbnb con precios menores a los 203.8193 (mediana) son ...20,856
#Analizamos el lado de  los 100 alojamientos más Económicos :
ECO[1:100, ] -> ECO100
ECO100
#Qué ciudad aparece más aquí en alojamientos caros :
ciudadeseco_100 <- table(ECO100$Ciudad)
barplot(ciudadeseco_100)
Esuperhost100 <- table(ECO100$Superhost)
barplot(Esuperhost100)
#Los valores de Limpieza y Satisfacción son muy altos
"La calificación que le asignan a este tipo de alojaminetos es 8.9  en promedio en LIMPIEZA DEL 0-10"
mean(ECO100$Limpieza)
"La Satisfacción del servicio es una notación alta, ya que tiene un 95.19 en promedio"
mean(ECO100$Satisfaccion)
"Y lo mínimo en satisfacción es 20, lo que igual es BAJO"
min(ECO100$Satisfaccion)
## Analizamos el tipo de cuarto y cuando lo suelen tomar por alquilado  : La mayoría es una Habitación privada con baño.
tipo_capacidadECO <- table(ECO100$Tipo,ECO100$Capacidad)
mosaicplot(tipo_capacidadECO)
"La cantidad promedio de habitaciones en este tipo de alojamientos es:1 ,el espacio es reducido"
roundF(mean(ECO100$Habitaciones, na.rm = T))
dayeco <- table(ECO100$Day) # Y se suelen tomar tanto en día de semana cómo para fines.
mosaicplot(dayeco)
D2 %>% filter(Precio < s2)%>% arrange(Precio) -> ECO
library(readr)
library(dplyr)
library(ggplot2)
D <- read_csv("Aemf1.csv") #EL ARCHIVO Aemf1 y datos.AIRBNB es lo mismo.
coef_var <- function(x, na.rm = FALSE) {sd(x, na.rm=na.rm) / mean(x, na.rm=na.rm)}
#coef_var()
roundF <- function(x){return(round(x,digits = 2))}
#moda <- function(x) {return(as.character(names(which.max(table(DF$Barco)))))}
nrow(D)
ncol(D)
View(D)
D$`Attraction Index` <- NULL
D$`Restraunt Index` <- NULL
names(D)
D %>% rename( Tipo = `Room Type` , Capacidad = `Person Capacity`, Oferta = Business, Habitaciones = Bedrooms, Ind.Atraccion = `Normalised Attraction Index`, Precio = Price, Share_Room = `Shared Room`, Limpieza = `Cleanliness Rating`, Ind.Restaurantes = `Normalised Restraunt Index`, Satisfaccion = `Guest Satisfaction`, Ciudad = City, Private_Room = `Private Room`, Distance_Center = `City Center (km)`, Distance_Metro = `Metro Distance (km)`) -> D2
View(D2)
names(D2)
Total_de_NAs <- sum(is.na(D))
print(paste("El total de NAs es :", Total_de_NAs))
Observaciones_completas <- sum(complete.cases(D2))
print(paste("Observaciones completas es : ",Observaciones_completas ))
Observaciones_incompletas <- sum(!complete.cases(D2))
print(paste("Observaciones incompletas es : ", Observaciones_incompletas))
summary(D2)
par(mfrow=c(1,2))
counts <- table(D2$`Multiple Rooms`)
barplot(counts, main = "Multiple Rooms", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,35000))
counts <- table(D2$Oferta)
barplot(counts, main = "Oferta", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000), xlim = c(0,2) )
vec <- factor(D2$Oferta, labels = c('No','Sí'))
D2$Oferta <- vec
vec <- factor(D2$`Multiple Rooms`, labels = c('No','Sí'))
D2$`Multiple Rooms` <- vec
vec <- factor(D2$Share_Room, labels = c('No','Sí'))
D2$Share_Room <- vec
vec <- factor(D2$Private_Room, labels = c('No','Sí'))
D2$Private_Room <- vec
vec <- factor(D2$Superhost, labels = c('No','Sí'))
D2$Superhost <- vec
summary(D2)
par(mfrow=c(1,2))
counts <- table(D2$Capacidad)
barplot(counts, main = "Capacidad", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
filter(D2, Habitaciones==0)
D2$Habitaciones <- replace(D2$Habitaciones, D2$Habitaciones==0, NA)
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
counts <- table(D2$Limpieza)
barplot(counts, main = "Limpieza", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
table(D2$Satisfaccion)
summary(D2)
plot(D2$Precio, xlab= "Airbnb's" , ylab = "Precio")
filter(D2, Precio>10000)
plot(D2$Distance_Center, xlab= "Airbnb's" , ylab = "Distance to City Center (km)")
filter(D2, Distance_Center>15)
unique(filter(D2, Distance_Center>15)[,'Ciudad'])
plot(D2$Distance_Metro, xlab= "Airbnb's" , ylab = "Distance to Metro Station (km)")
filter(D2, Distance_Metro>8)
unique(filter(D2, Distance_Metro>8)[,'Ciudad'])
unique(D2$Ciudad)
unique(D2$Tipo)
unique(D2$Day)
counts <- table(D2$Ciudad)
barplot(counts, main = "Ciudad", ylab = "Número de Observaciones" , las=2, ylim = c(0,10000), cex.names = 0.9)
par(mfrow=c(1,2)) #QUE HACE mfrow ?
counts <- table(D2$Day)
barplot(counts, main = "Día", ylab = "Número de Observaciones", las = 2, ylim = c(0,25000), cex.axis = 0.8, cex.lab = 0.7, cex.names = 0.6)
counts <- table(D2$Tipo)
barplot(counts, main = "Tipo", ylab = "Número de Observaciones", las = 2, ylim = c(0,30000), cex.axis = 0.8, cex.names = 0.6, cex.lab = 0.7)
##
## SATISFACCIÓN
##
par(mfrow=c(1,2)) #QUE HACE mfrow ?
boxplot(D2$Satisfaccion, main = "Satisfaccion", xlab = "Puntaje de Satisfaccion", ylab = "Frecuencia")
# Add mean as a red point
points(mean(D2$Satisfaccion), col = "red", pch = 16)
# Add median as a blue point
points(median(D2$Satisfaccion), col = "blue", pch = 16)
hist(D2$Satisfaccion, main = "Satisfaccion", xlab = "Puntaje de Satisfaccion", ylab = "Frecuencia")
mean_satisfaction <- mean(D2$Satisfaccion)
median_satisfaction <- median(D2$Satisfaccion)
# Add mean as a red dashed line
abline(v = mean_satisfaction, col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median_satisfaction, col = "blue", lwd = 2)
mean_satisfaction
median_satisfaction
IQR(D2$Satisfaccion)
quantile(D2$Satisfaccion)
##
## LIMPIEZA
##
mean_limpieza <- mean(D2$Limpieza)
median_limpieza <- median(D2$Limpieza)
boxplot(D2$Limpieza, main = "Limpieza", xlab = "Puntaje de Limpieza", ylab = "Frecuencia")
# Add mean as a red point
points(mean_limpieza, col = "red", pch = 16)
# Add median as a blue point
points(median_limpieza, col = "blue", pch = 16)
mean_limpieza
median_limpieza
IQR(D2$Limpieza)
quantile(D2$Limpieza)
##
## ATRACCIÓN
##
mean_atraccion <- mean(D2$Ind.Atraccion)
median_atraccion <- median(D2$Ind.Atraccion)
par(mfrow=c(1,2)) #QUE HACE mfrow ?
boxplot(D2$Ind.Atraccion, main = "Atracción", xlab = "Índice de Atracción", ylab = "Frecuencia")
# Add mean as a red point
points(mean_atraccion, col = "red", pch = 16)
# Add median as a blue point
points(median_atraccion, col = "blue", pch = 16)
hist(D2$Ind.Atraccion, main = "Atracción", xlab = "Índice de Atracción", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean_atraccion, col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median_atraccion, col = "blue", lwd = 2)
mean_atraccion
median_atraccion
IQR(D2$Ind.Atraccion)
quantile(D2$Ind.Atraccion)
D2 %>%
group_by(Ciudad) %>%
summarise(`Precio Promedio` = mean(Precio),
`Número de Airbnb's` = n(),
`Satisfaccion Promedio` = mean(Satisfaccion),
`Superhosts %` = prop.table(table(Superhost))["Sí"],
`Puntaje de Limpieza Promedio` = mean(Limpieza),
`Índice de Atracción Promedio` = mean(Ind.Atraccion)) -> D_Ciudades
arrange(D_Ciudades)
D2 %>% filter(Ciudad =='Amsterdam') -> DAMS
D2 %>% filter(Ciudad =='Barcelona') -> DBAR
D2 %>% filter(Ciudad =='Athens') -> DATH
D2 %>% filter(Ciudad =='Berlin') -> DBER
D2 %>% filter(Ciudad =='Budapest') -> DBUD
D2 %>% filter(Ciudad =='Lisbon') -> DLIS
D2 %>% filter(Ciudad =='Paris') -> DPAR
D2 %>% filter(Ciudad =='Rome') -> DROM
D2 %>% filter(Ciudad =='Vienna') -> DVIE
par(mfrow=c(3,3))
hist(DAMS$Precio, main = "Precio en Amsterdam", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DAMS$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DAMS$Precio), col = "blue", lwd = 2)
hist(DBAR$Precio, main = "Precio en Barcelona", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DBAR$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DBAR$Precio), col = "blue", lwd = 2)
hist(DATH$Precio, main = "Precio en Atenas", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DATH$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DATH$Precio), col = "blue", lwd = 2)
hist(DBER$Precio, main = "Precio en Berlin", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DBER$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DBER$Precio), col = "blue", lwd = 2)
hist(DBUD$Precio, main = "Precio en Budapest", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DBUD$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DBUD$Precio), col = "blue", lwd = 2)
hist(DLIS$Precio, main = "Precio en Lisboa", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DLIS$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DLIS$Precio), col = "blue", lwd = 2)
hist(DPAR$Precio, main = "Precio en Paris", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DPAR$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DPAR$Precio), col = "blue", lwd = 2)
hist(DROM$Precio, main = "Precio en Roma", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DROM$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DROM$Precio), col = "blue", lwd = 2)
hist(DVIE$Precio, main = "Precio en Vienna", xlab = "Precio", ylab = "Frecuencia")
# Add mean as a red dashed line
abline(v = mean(DVIE$Precio), col = "red", lwd = 2)
# Add median as a blue dashed line
abline(v = median(DVIE$Precio), col = "blue", lwd = 2)
plot(x = D2$Satisfaccion, y = D2$Precio, xlab = "Satisfacción" , ylab = "Precio", ylim= c(0,2500))
cor(D2$Satisfaccion, D2$Precio)
plot(x = D2$Limpieza, y = D2$Precio, xlab = "Puntaje de Limpieza" , ylab = "Precio", ylim = c(0,5000))
cor(D2$Limpieza, D2$Precio)
plot(x = D2$Ind.Atraccion, y = D2$Precio, xlab = "Índice de Atracción" , ylab = "Precio", ylim= c(0,2500))
cor(D2$Ind.Atraccion, D2$Precio)
plot(x = D2$Limpieza, y = D2$Satisfaccion, xlab = "Satisfacción" , ylab = "Puntaje de Limpieza", ylim= c(0,100))
cor(D2$Satisfaccion, D2$Limpieza)
mosaicplot(table(D2$Ciudad, D2$Day), main = "Cuándo se reserva - Ciudad", xlab = "Ciudades", ylab = "Cuándo se Reserva", las = 0.7, )
unique(D2$Ciudad)
c <- table(D2$Ciudad)
sum(c)
barplot(c, main = "Ciudades en el Estudio", ylab = "Número de Observaciones" , las=2, ylim = c(0,10000), cex.names = 0.9, col=c("orange"))
s <-round(mean(D2$Precio),digits = 2)
mediana_precio <- median(D2$Precio)
mediana_precio
D2 %>% filter(Precio > mediana_precio) %>% arrange(desc(Precio)) -> CAROS
CAROS
nrow(CAROS) #Es el total de Airbnb con precios mayores a los 203.8193 (mediana)
c1 <- table(CAROS$Ciudad) #Del grupos de los Caros, Atenas es el que menos alojamientos tiene en el estudio (795). El de más apariciones es París (5,724)
c1
min(c1)
which.min(c1)
#Analizamos el lado de  los 100 alojamientos más caros :
CAROS[1:100, ] -> CAROS100
CAROS100
#Qué ciudad aparece más aquí en alojamientos caros :
ciudades_100 <- table(CAROS100$Ciudad)
barplot(ciudades_100)
superhost100 <- table(CAROS100$Superhost)
barplot(superhost100)
#Los valores de Limpieza y Satisfacción son muy altos
"La calificación que le asignan a este tipo de alojaminetos es 9.5 en promedio en LIMPIEZA"
mean(CAROS100$Limpieza)
"La Satisfacción del servicio es una notación alta, ya que tiene un 95.19 en promedio"
mean(CAROS100$Satisfaccion)
"Y lo mínimo en satisfacción es 60, lo que igual es alto"
min(CAROS100$Satisfaccion)
## Analizamos el tipo de cuarto y cuando lo suelen tomar por alquilado  : La mayoría es una Casa Entera
tipo_capacidad <- table(CAROS100$Tipo,CAROS100$Capacidad)
mosaicplot(tipo_capacidad)
"La cantidad promedio de habitaciones en este tipo de alojamientos es:"
roundF(mean(CAROS100$Habitaciones, na.rm = T))
day <- table(CAROS100$Day) # Y se suelen tomar los fines de semana
mosaicplot(day)
D2 %>% filter(Precio < mediana_precio) %>% arrange(Precio)-> ECO
ECO
nrow(ECO) #Es el total de Airbnb con precios menores a los 203.8193 (mediana) son ...20,856
#Analizamos el lado de  los 100 alojamientos más Económicos :
ECO[1:100, ] -> ECO100
ECO100
#Qué ciudad aparece más aquí en alojamientos caros :
ciudadeseco_100 <- table(ECO100$Ciudad)
barplot(ciudadeseco_100)
Esuperhost100 <- table(ECO100$Superhost)
barplot(Esuperhost100)
#Los valores de Limpieza y Satisfacción son muy altos
"La calificación que le asignan a este tipo de alojaminetos es 8.9  en promedio en LIMPIEZA DEL 0-10"
mean(ECO100$Limpieza)
"La Satisfacción del servicio es una notación alta, ya que tiene un 95.19 en promedio"
mean(ECO100$Satisfaccion)
"Y lo mínimo en satisfacción es 20, lo que igual es BAJO"
min(ECO100$Satisfaccion)
## Analizamos el tipo de cuarto y cuando lo suelen tomar por alquilado  : La mayoría es una Habitación privada con baño.
tipo_capacidadECO <- table(ECO100$Tipo,ECO100$Capacidad)
mosaicplot(tipo_capacidadECO)
"La cantidad promedio de habitaciones en este tipo de alojamientos es:1 ,el espacio es reducido"
roundF(mean(ECO100$Habitaciones, na.rm = T))
dayeco <- table(ECO100$Day) # Y se suelen tomar tanto en día de semana cómo para fines.
mosaicplot(dayeco)
D2 %>% filter(Precio < s2)%>% arrange(Precio) -> ECO
# La ciudad que más aparece aquí es  :
DD2 %>% select(Ciudad,Satisfaccion)%>%group_by(Ciudad)%>%summarise(Satisfaccion=sum(Satisfaccion)) %>%arrange(desc(Satisfaccion))%>%tail(n=-1) -> X2
X2
barplot(X2$Satisfaccion, ylim = c(0,200000))
