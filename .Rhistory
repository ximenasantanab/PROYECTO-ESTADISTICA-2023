barplot(counts, main = "Capacidad", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
filter(D2, Habitaciones==0)
D2$Habitaciones <- replace(D2$Habitaciones, D2$Habitaciones==0, NA)
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
counts <- table(D2$Limpieza)
barplot(counts, main = "Limpieza", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
table(D2$Satisfaccion)
summary(D2)
plot(D2$Precio, xlab= "Airbnb's" , ylab = "Precio")
filter(D2, Precio>10000)
plot(D2$Distance_Center, xlab= "Airbnb's" , ylab = "Distance to City Center (km)")
filter(D2, Distance_Center>15)
unique(filter(D2, Distance_Center>15)[,'Ciudad'])
plot(D2$Distance_Metro, xlab= "Airbnb's" , ylab = "Distance to Metro Station (km)")
filter(D2, Distance_Metro>8)
unique(filter(D2, Distance_Metro>8)[,'Ciudad'])
counts <- table(D2$Ciudad)
barplot(counts, main = "Ciudad", ylab = "Número de Observaciones" , las=2, ylim = c(0,10000), cex.names = 0.9)
par(mfrow=c(1,2)) #QUE HACE mfrow ?
counts <- table(D2$Day)
barplot(counts, main = "Día", ylab = "Número de Observaciones", las = 2, ylim = c(0,25000), cex.axis = 0.8, cex.lab = 0.7, cex.names = 0.6)
counts <- table(D2$Tipo)
barplot(counts, main = "Tipo", ylab = "Número de Observaciones", las = 2, ylim = c(0,30000), cex.axis = 0.8, cex.names = 0.6, cex.lab = 0.7)
library(funModeling)
status(D2)
A <- df_status(D2,print_results=F)
source("~/.active-rstudio-document", echo=TRUE)
library(readr)
library(dplyr)
D <- read_csv("Aemf1.csv") #EL ARCHIVO Aemf1 y datos.AIRBNB es lo mismo.
coef_var <- function(x, na.rm = FALSE) {sd(x, na.rm=na.rm) / mean(x, na.rm=na.rm)}
#coef_var()
roundF <- function(x){return(round(x,digits = 2))}
#moda <- function(x) {return(as.character(names(which.max(table(DF$Barco)))))}
nrow(D)
ncol(D)
View(D)
D$`Attraction Index` <- NULL
D$`Restraunt Index` <- NULL
names(D)
D %>% rename( Tipo = `Room Type` , Capacidad = `Person Capacity`, Oferta = Business, Habitaciones = Bedrooms, Ind.Atraccion = `Normalised Attraction Index`, Precio = Price, Share_Room = `Shared Room`, Limpieza = `Cleanliness Rating`, Ind.Restaurantes = `Normalised Restraunt Index`, Satisfaccion = `Guest Satisfaction`, Ciudad = City, Private_Room = `Private Room`, Distance_Center = `City Center (km)`, Distance_Metro = `Metro Distance (km)`) -> D2
names(D2)
Total_de_NAs <- sum(is.na(D))
print(paste("El total de NAs es :", Total_de_NAs))
Observaciones_completas <- sum(complete.cases(D2))
print(paste("Observaciones completas es : ",Observaciones_completas ))
Observaciones_incompletas <- sum(!complete.cases(D2))
print(paste("Observaciones incompletas es : ", Observaciones_incompletas))
summary(D2)
par(mfrow=c(1,2))
counts <- table(D2$`Multiple Rooms`)
barplot(counts, main = "Multiple Rooms", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,35000))
counts <- table(D2$Oferta)
barplot(counts, main = "Oferta", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
vec <- factor(D2$Oferta, labels = c('No','Sí'))
D2$Oferta <- vec
vec <- factor(D2$`Multiple Rooms`, labels = c('No','Sí'))
D2$`Multiple Rooms` <- vec
vec <- factor(D2$Share_Room, labels = c('No','Sí'))
D2$Share_Room <- vec
vec <- factor(D2$Private_Room, labels = c('No','Sí'))
D2$Private_Room <- vec
vec <- factor(D2$Superhost, labels = c('No','Sí'))
D2$Superhost <- vec
summary(D2)
par(mfrow=c(1,2))
counts <- table(D2$Capacidad)
barplot(counts, main = "Capacidad", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
filter(D2, Habitaciones==0)
D2$Habitaciones <- replace(D2$Habitaciones, D2$Habitaciones==0, NA)
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
counts <- table(D2$Limpieza)
barplot(counts, main = "Limpieza", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
table(D2$Satisfaccion)
summary(D2)
plot(D2$Precio, xlab= "Airbnb's" , ylab = "Precio")
filter(D2, Precio>10000)
plot(D2$Distance_Center, xlab= "Airbnb's" , ylab = "Distance to City Center (km)")
filter(D2, Distance_Center>15)
unique(filter(D2, Distance_Center>15)[,'Ciudad'])
plot(D2$Distance_Metro, xlab= "Airbnb's" , ylab = "Distance to Metro Station (km)")
filter(D2, Distance_Metro>8)
unique(filter(D2, Distance_Metro>8)[,'Ciudad'])
unique(D2$Ciudad)
unique(D2$Tipo)
unique(D2$Day)
counts <- table(D2$Ciudad)
barplot(counts, main = "Ciudad", ylab = "Número de Observaciones" , las=2, ylim = c(0,10000), cex.names = 0.9)
par(mfrow=c(1,2)) #QUE HACE mfrow ?
counts <- table(D2$Day)
barplot(counts, main = "Día", ylab = "Número de Observaciones", las = 2, ylim = c(0,25000), cex.axis = 0.8, cex.lab = 0.7, cex.names = 0.6)
counts <- table(D2$Tipo)
barplot(counts, main = "Tipo", ylab = "Número de Observaciones", las = 2, ylim = c(0,30000), cex.axis = 0.8, cex.names = 0.6, cex.lab = 0.7)
unique(D2$Ciudad)
table(D2$Ciudad)
s <-round(mean(D2$Precio),digits = 2)
D2 %>% filter(Precio > s)%>% arrange(Precio) -> DD2
DD2
C <- table(DD2$Ciudad) # En amsterdam está la mayoría de Airbnbs que su precio es mayor al promedio
C
# OPCIÓN 1
barplot(C)
# La ciudad que más aparece aquí es  :
DD2 %>% select(Ciudad,Satisfaccion)%>%group_by(Ciudad)%>%summarise(Satisfaccion=sum(Satisfaccion)) %>%arrange(desc(Satisfaccion))%>%tail(n=-1) -> X2
X2
barplot(X2$Satisfaccion, ylim = c(0,200000))
max(D2$Precio)
a <- which.max(D2$Precio)
D2[a,1:17]
round(min(D2$Precio),digits = 2)
a2 <- which.min(D2$Precio)
D2[a2,1:17]
D2 %>% filter(Ciudad =='Amsterdam') -> DAMS
DAMS
#El más caro
r1 <- which.max(DAMS$Precio)
#El más económico
r2 <- which.min(DAMS$Precio)
DAMS[r1,1:17]
DAMS[r2,1:17]
regresion1 <- lm(Distance_Metro ~ Precio , data = DAMS)
s1 <- summary(regresion1)
plot(DAMS$Precio,DAMS$Distance_Metro, xlab='Precio', ylab='Distancia al Metro (km)')
abline(regresion1)
max(DAMS$Precio)
min(DAMS$Distance_Metro)
max(DAMS$Distance_Metro)
#PARA VER SI ESTOS DOS TIENEN RELACIÓN SE CALCULA COR Y SU COVARIANZA
# Hallamos la correlación entre precio y distancia al metro. la correlación está entre -1.....0....   1 . Mientras más cerca al cero es que la correlación es baja.
cor(DAMS$Precio,DAMS$Distance_Metro)
plot(DAMS$Precio ~ DAMS$Distance_Metro)
recta <- lm(Distance_Metro ~ Precio , data = DAMS)
abline(recta)
summary(recta)
regresion2 <- lm(Distance_Center ~ Precio , data = DAMS)
summary(regresion2)
plot(DAMS$Precio,DAMS$Distance_Center, xlab='Precio', ylab='Distancia al Centro(km)')
abline(regresion2)
regresion3 <- lm(Ind.Restaurantes ~ Precio , data = DAMS)
summary(regresion3)
plot(DAMS$Precio,DAMS$Ind.Restaurantes, xlab='Precio', ylab='Ind.Restaurantes')
abline(regresion3)
regresion4 <- lm( Satisfaccion~Precio , data = DAMS)
summary(regresion4)
plot(DAMS$Precio,DAMS$Satisfaccion, xlab='Precio', ylab='Satisfacción')
abline(regresion4)
D2 %>% filter(Ciudad =='Barcelona') -> DBAR
DBAR
D2 %>% group_by(Ciudad) %>% filter(Precio == max(Precio))%>% arrange(Precio)    -> D4
D4
barplot(table(D4$Tipo))
hist(D4$Precio)
# Crear una tabla con las 9 ciudades
D<-read.csv("Aemf1.csv")
D1<-data.frame(table(D$City))
ciudades <- D1$Var1
# Generar datos aleatorios para cada ciudad
datos_al_azar <- sample(1:9, length(ciudades))
# Crear el data frame con las ciudades y los datos al azar
datos <- data.frame(Ciudad = ciudades, IndiceAtraccion = datos_al_azar)
# Ordenar los datos por ciudad
datos <- datos[order(datos$Ciudad), ]
# Crear la gráfica de barras
barplot(datos$IndiceAtraccion,
names.arg = datos$Ciudad,
xlab = "Ciudad",
ylab = "Índice de atracción",
main = "Índice de atracción por ciudad",
cex.names = 0.5)
# Generar datos aleatorios para cada ciudad
# Generar datos aleatorios para cada ciudad
D2 <- D[which(!duplicated(D$City)), ]
D2 <- D2[sample(nrow(D2), min(200, nrow(D2)), replace = FALSE), ]
# Crear el gráfico de dispersión
plot(D2$Price, D2$`Attraction Index`,
xlab = "Precio",
ylab = "Índice de atracción",
main = "Relación entre Precio e Índice de atracción")
D2
D2
D2
library(readr)
library(dplyr)
D <- read_csv("Aemf1.csv") #EL ARCHIVO Aemf1 y datos.AIRBNB es lo mismo.
coef_var <- function(x, na.rm = FALSE) {sd(x, na.rm=na.rm) / mean(x, na.rm=na.rm)}
#coef_var()
roundF <- function(x){return(round(x,digits = 2))}
#moda <- function(x) {return(as.character(names(which.max(table(DF$Barco)))))}
nrow(D)
ncol(D)
View(D)
D$`Attraction Index` <- NULL
D$`Restraunt Index` <- NULL
names(D)
D %>% rename( Tipo = `Room Type` , Capacidad = `Person Capacity`, Oferta = Business, Habitaciones = Bedrooms, Ind.Atraccion = `Normalised Attraction Index`, Precio = Price, Share_Room = `Shared Room`, Limpieza = `Cleanliness Rating`, Ind.Restaurantes = `Normalised Restraunt Index`, Satisfaccion = `Guest Satisfaction`, Ciudad = City, Private_Room = `Private Room`, Distance_Center = `City Center (km)`, Distance_Metro = `Metro Distance (km)`) -> D2
names(D2)
Total_de_NAs <- sum(is.na(D))
print(paste("El total de NAs es :", Total_de_NAs))
Observaciones_completas <- sum(complete.cases(D2))
print(paste("Observaciones completas es : ",Observaciones_completas ))
Observaciones_incompletas <- sum(!complete.cases(D2))
print(paste("Observaciones incompletas es : ", Observaciones_incompletas))
summary(D2)
par(mfrow=c(1,2))
counts <- table(D2$`Multiple Rooms`)
barplot(counts, main = "Multiple Rooms", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,35000))
counts <- table(D2$Oferta)
barplot(counts, main = "Oferta", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
vec <- factor(D2$Oferta, labels = c('No','Sí'))
D2$Oferta <- vec
vec <- factor(D2$`Multiple Rooms`, labels = c('No','Sí'))
D2$`Multiple Rooms` <- vec
vec <- factor(D2$Share_Room, labels = c('No','Sí'))
D2$Share_Room <- vec
vec <- factor(D2$Private_Room, labels = c('No','Sí'))
D2$Private_Room <- vec
vec <- factor(D2$Superhost, labels = c('No','Sí'))
D2$Superhost <- vec
summary(D2)
par(mfrow=c(1,2))
counts <- table(D2$Capacidad)
barplot(counts, main = "Capacidad", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
filter(D2, Habitaciones==0)
D2$Habitaciones <- replace(D2$Habitaciones, D2$Habitaciones==0, NA)
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
counts <- table(D2$Limpieza)
barplot(counts, main = "Limpieza", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
table(D2$Satisfaccion)
summary(D2)
plot(D2$Precio, xlab= "Airbnb's" , ylab = "Precio")
filter(D2, Precio>10000)
plot(D2$Distance_Center, xlab= "Airbnb's" , ylab = "Distance to City Center (km)")
filter(D2, Distance_Center>15)
unique(filter(D2, Distance_Center>15)[,'Ciudad'])
plot(D2$Distance_Metro, xlab= "Airbnb's" , ylab = "Distance to Metro Station (km)")
filter(D2, Distance_Metro>8)
unique(filter(D2, Distance_Metro>8)[,'Ciudad'])
unique(D2$Ciudad)
unique(D2$Tipo)
unique(D2$Day)
counts <- table(D2$Ciudad)
barplot(counts, main = "Ciudad", ylab = "Número de Observaciones" , las=2, ylim = c(0,10000), cex.names = 0.9)
par(mfrow=c(1,2)) #QUE HACE mfrow ?
counts <- table(D2$Day)
barplot(counts, main = "Día", ylab = "Número de Observaciones", las = 2, ylim = c(0,25000), cex.axis = 0.8, cex.lab = 0.7, cex.names = 0.6)
counts <- table(D2$Tipo)
barplot(counts, main = "Tipo", ylab = "Número de Observaciones", las = 2, ylim = c(0,30000), cex.axis = 0.8, cex.names = 0.6, cex.lab = 0.7)
unique(D2$Ciudad)
table(D2$Ciudad)
s <-round(mean(D2$Precio),digits = 2)
D2 %>% filter(Precio > s)%>% arrange(Precio) -> DD2
DD2
C <- table(DD2$Ciudad) # En amsterdam está la mayoría de Airbnbs que su precio es mayor al promedio
C
# OPCIÓN 1
barplot(C)
# La ciudad que más aparece aquí es  :
DD2 %>% select(Ciudad,Satisfaccion)%>%group_by(Ciudad)%>%summarise(Satisfaccion=sum(Satisfaccion)) %>%arrange(desc(Satisfaccion))%>%tail(n=-1) -> X2
X2
barplot(X2$Satisfaccion, ylim = c(0,200000))
max(D2$Precio)
a <- which.max(D2$Precio)
D2[a,1:17]
round(min(D2$Precio),digits = 2)
a2 <- which.min(D2$Precio)
D2[a2,1:17]
D2 %>% filter(Ciudad =='Amsterdam') -> DAMS
DAMS
#El más caro
r1 <- which.max(DAMS$Precio)
#El más económico
r2 <- which.min(DAMS$Precio)
DAMS[r1,1:17]
DAMS[r2,1:17]
regresion1 <- lm(Distance_Metro ~ Precio , data = DAMS)
s1 <- summary(regresion1)
plot(DAMS$Precio,DAMS$Distance_Metro, xlab='Precio', ylab='Distancia al Metro (km)')
abline(regresion1)
max(DAMS$Precio)
min(DAMS$Distance_Metro)
max(DAMS$Distance_Metro)
#PARA VER SI ESTOS DOS TIENEN RELACIÓN SE CALCULA COR Y SU COVARIANZA
# Hallamos la correlación entre precio y distancia al metro. la correlación está entre -1.....0....   1 . Mientras más cerca al cero es que la correlación es baja.
cor(DAMS$Precio,DAMS$Distance_Metro)
plot(DAMS$Precio ~ DAMS$Distance_Metro)
recta <- lm(Distance_Metro ~ Precio , data = DAMS)
abline(recta)
summary(recta)
regresion2 <- lm(Distance_Center ~ Precio , data = DAMS)
summary(regresion2)
plot(DAMS$Precio,DAMS$Distance_Center, xlab='Precio', ylab='Distancia al Centro(km)')
abline(regresion2)
regresion3 <- lm(Ind.Restaurantes ~ Precio , data = DAMS)
summary(regresion3)
plot(DAMS$Precio,DAMS$Ind.Restaurantes, xlab='Precio', ylab='Ind.Restaurantes')
abline(regresion3)
regresion4 <- lm( Satisfaccion~Precio , data = DAMS)
summary(regresion4)
plot(DAMS$Precio,DAMS$Satisfaccion, xlab='Precio', ylab='Satisfacción')
abline(regresion4)
D2 %>% filter(Ciudad =='Barcelona') -> DBAR
DBAR
D2 %>% group_by(Ciudad) %>% filter(Precio == max(Precio))%>% arrange(Precio)    -> D4
D4
barplot(table(D4$Tipo))
hist(D4$Precio)
# Crear una tabla con las 9 ciudades
D<-read.csv("Aemf1.csv")
D1<-data.frame(table(D$City))
ciudades <- D1$Var1
# Generar datos aleatorios para cada ciudad
datos_al_azar <- sample(1:9, length(ciudades))
# Crear el data frame con las ciudades y los datos al azar
datos <- data.frame(Ciudad = ciudades, IndiceAtraccion = datos_al_azar)
# Ordenar los datos por ciudad
datos <- datos[order(datos$Ciudad), ]
# Crear la gráfica de barras
barplot(datos$IndiceAtraccion,
names.arg = datos$Ciudad,
xlab = "Ciudad",
ylab = "Índice de atracción",
main = "Índice de atracción por ciudad",
cex.names = 0.5)
# Generar datos aleatorios para cada ciudad
# Generar datos aleatorios para cada ciudad
D2 <- D[which(!duplicated(D$City)), ]
D2 <- D2[sample(nrow(D2), min(200, nrow(D2)), replace = FALSE), ]
# Crear el gráfico de dispersión
plot(D2$Price, D2$`Attraction Index`,
xlab = "Precio",
ylab = "Índice de atracción",
main = "Relación entre Precio e Índice de atracción")
D2
D2
D2
D2
D2
vec <- factor(D2$Oferta, labels = c('No','Sí'))
library(readr)
library(dplyr)
D <- read_csv("Aemf1.csv") #EL ARCHIVO Aemf1 y datos.AIRBNB es lo mismo.
coef_var <- function(x, na.rm = FALSE) {sd(x, na.rm=na.rm) / mean(x, na.rm=na.rm)}
#coef_var()
roundF <- function(x){return(round(x,digits = 2))}
#moda <- function(x) {return(as.character(names(which.max(table(DF$Barco)))))}
nrow(D)
ncol(D)
View(D)
D$`Attraction Index` <- NULL
D$`Restraunt Index` <- NULL
names(D)
D %>% rename( Tipo = `Room Type` , Capacidad = `Person Capacity`, Oferta = Business, Habitaciones = Bedrooms, Ind.Atraccion = `Normalised Attraction Index`, Precio = Price, Share_Room = `Shared Room`, Limpieza = `Cleanliness Rating`, Ind.Restaurantes = `Normalised Restraunt Index`, Satisfaccion = `Guest Satisfaction`, Ciudad = City, Private_Room = `Private Room`, Distance_Center = `City Center (km)`, Distance_Metro = `Metro Distance (km)`) -> D2
names(D2)
Total_de_NAs <- sum(is.na(D))
print(paste("El total de NAs es :", Total_de_NAs))
Observaciones_completas <- sum(complete.cases(D2))
print(paste("Observaciones completas es : ",Observaciones_completas ))
Observaciones_incompletas <- sum(!complete.cases(D2))
print(paste("Observaciones incompletas es : ", Observaciones_incompletas))
summary(D2)
par(mfrow=c(1,2))
counts <- table(D2$`Multiple Rooms`)
barplot(counts, main = "Multiple Rooms", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,35000))
counts <- table(D2$Oferta)
barplot(counts, main = "Oferta", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
D2
vec <- factor(D2$Oferta, labels = c('No','Sí'))
D2$Oferta <- vec
vec <- factor(D2$`Multiple Rooms`, labels = c('No','Sí'))
D2$`Multiple Rooms` <- vec
vec <- factor(D2$Share_Room, labels = c('No','Sí'))
D2$Share_Room <- vec
vec <- factor(D2$Private_Room, labels = c('No','Sí'))
D2$Private_Room <- vec
vec <- factor(D2$Superhost, labels = c('No','Sí'))
D2$Superhost <- vec
summary(D2)
par(mfrow=c(1,2))
counts <- table(D2$Capacidad)
barplot(counts, main = "Capacidad", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
filter(D2, Habitaciones==0)
D2$Habitaciones <- replace(D2$Habitaciones, D2$Habitaciones==0, NA)
counts <- table(D2$Habitaciones)
barplot(counts, main = "Habitaciones", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
counts <- table(D2$Limpieza)
barplot(counts, main = "Limpieza", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,20000))
table(D2$Satisfaccion)
summary(D2)
plot(D2$Precio, xlab= "Airbnb's" , ylab = "Precio")
filter(D2, Precio>10000)
plot(D2$Distance_Center, xlab= "Airbnb's" , ylab = "Distance to City Center (km)")
filter(D2, Distance_Center>15)
unique(filter(D2, Distance_Center>15)[,'Ciudad'])
plot(D2$Distance_Metro, xlab= "Airbnb's" , ylab = "Distance to Metro Station (km)")
filter(D2, Distance_Metro>8)
unique(filter(D2, Distance_Metro>8)[,'Ciudad'])
unique(D2$Ciudad)
unique(D2$Tipo)
unique(D2$Day)
counts <- table(D2$Ciudad)
barplot(counts, main = "Ciudad", ylab = "Número de Observaciones" , las=2, ylim = c(0,10000), cex.names = 0.9)
par(mfrow=c(1,2)) #QUE HACE mfrow ?
counts <- table(D2$Day)
barplot(counts, main = "Día", ylab = "Número de Observaciones", las = 2, ylim = c(0,25000), cex.axis = 0.8, cex.lab = 0.7, cex.names = 0.6)
counts <- table(D2$Tipo)
barplot(counts, main = "Tipo", ylab = "Número de Observaciones", las = 2, ylim = c(0,30000), cex.axis = 0.8, cex.names = 0.6, cex.lab = 0.7)
unique(D2$Ciudad)
table(D2$Ciudad)
s <-round(mean(D2$Precio),digits = 2)
D2 %>% filter(Precio > s)%>% arrange(Precio) -> DD2
DD2
C <- table(DD2$Ciudad) # En amsterdam está la mayoría de Airbnbs que su precio es mayor al promedio
C
# OPCIÓN 1
barplot(C)
# La ciudad que más aparece aquí es  :
DD2 %>% select(Ciudad,Satisfaccion)%>%group_by(Ciudad)%>%summarise(Satisfaccion=sum(Satisfaccion)) %>%arrange(desc(Satisfaccion))%>%tail(n=-1) -> X2
X2
barplot(X2$Satisfaccion, ylim = c(0,200000))
max(D2$Precio)
a <- which.max(D2$Precio)
D2[a,1:17]
round(min(D2$Precio),digits = 2)
a2 <- which.min(D2$Precio)
D2[a2,1:17]
D2 %>% filter(Ciudad =='Amsterdam') -> DAMS
DAMS
#El más caro
r1 <- which.max(DAMS$Precio)
#El más económico
r2 <- which.min(DAMS$Precio)
DAMS[r1,1:17]
DAMS[r2,1:17]
regresion1 <- lm(Distance_Metro ~ Precio , data = DAMS)
s1 <- summary(regresion1)
plot(DAMS$Precio,DAMS$Distance_Metro, xlab='Precio', ylab='Distancia al Metro (km)')
abline(regresion1)
max(DAMS$Precio)
min(DAMS$Distance_Metro)
max(DAMS$Distance_Metro)
#PARA VER SI ESTOS DOS TIENEN RELACIÓN SE CALCULA COR Y SU COVARIANZA
# Hallamos la correlación entre precio y distancia al metro. la correlación está entre -1.....0....   1 . Mientras más cerca al cero es que la correlación es baja.
cor(DAMS$Precio,DAMS$Distance_Metro)
plot(DAMS$Precio ~ DAMS$Distance_Metro)
recta <- lm(Distance_Metro ~ Precio , data = DAMS)
abline(recta)
summary(recta)
regresion2 <- lm(Distance_Center ~ Precio , data = DAMS)
summary(regresion2)
plot(DAMS$Precio,DAMS$Distance_Center, xlab='Precio', ylab='Distancia al Centro(km)')
abline(regresion2)
regresion3 <- lm(Ind.Restaurantes ~ Precio , data = DAMS)
summary(regresion3)
plot(DAMS$Precio,DAMS$Ind.Restaurantes, xlab='Precio', ylab='Ind.Restaurantes')
abline(regresion3)
regresion4 <- lm( Satisfaccion~Precio , data = DAMS)
summary(regresion4)
plot(DAMS$Precio,DAMS$Satisfaccion, xlab='Precio', ylab='Satisfacción')
abline(regresion4)
D2 %>% filter(Ciudad =='Barcelona') -> DBAR
DBAR
D2 %>% group_by(Ciudad) %>% filter(Precio == max(Precio))%>% arrange(Precio)    -> D4
D4
barplot(table(D4$Tipo))
hist(D4$Precio)
# Crear una tabla con las 9 ciudades
D<-read.csv("Aemf1.csv")
D1<-data.frame(table(D$City))
ciudades <- D1$Var1
# Generar datos aleatorios para cada ciudad
datos_al_azar <- sample(1:9, length(ciudades))
# Crear el data frame con las ciudades y los datos al azar
datos <- data.frame(Ciudad = ciudades, IndiceAtraccion = datos_al_azar)
# Ordenar los datos por ciudad
datos <- datos[order(datos$Ciudad), ]
# Crear la gráfica de barras
barplot(datos$IndiceAtraccion,
names.arg = datos$Ciudad,
xlab = "Ciudad",
ylab = "Índice de atracción",
main = "Índice de atracción por ciudad",
cex.names = 0.5)
# Generar datos aleatorios para cada ciudad
# Generar datos aleatorios para cada ciudad
D2 <- D[which(!duplicated(D$City)), ]
D2 <- D2[sample(nrow(D2), min(200, nrow(D2)), replace = FALSE), ]
# Crear el gráfico de dispersión
plot(D2$Price, D2$`Attraction Index`,
xlab = "Precio",
ylab = "Índice de atracción",
main = "Relación entre Precio e Índice de atracción")
D2
counts <- table(D2$Oferta)
barplot(counts, main = "Oferta", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
counts <- table(D2$Oferta)
barplot(counts, main = "Oferta", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
counts <- table(D2$Oferta)
barplot(counts, main = "Oferta", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,30000))
par(mfrow=c(1,2))
counts <- table(D2$`Multiple Rooms`)
barplot(counts, main = "Multiple Rooms", ylab = "Número de Observaciones", xlab = "Valores" , ylim = c(0,35000))
